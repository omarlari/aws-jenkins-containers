Description: This template deploys a sinlge Jenkins instance

Parameters:
  KeyName:
    Type: String
  Subnet:
    Type: String
  Vpc:
    Type: String

Resources:

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-hosts
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 192.30.252.0/22
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 192.30.252.0/22
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 192.30.252.0/22
        - IpProtocol: tcp
          FromPort: '9418'
          ToPort: '9418'
          CidrIp: 192.30.252.0/22
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 185.199.108.0/22
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 185.199.108.0/22
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 185.199.108.0/22
        - IpProtocol: tcp
          FromPort: '9418'
          ToPort: '9418'
          CidrIp: 185.199.108.0/22
      VpcId: !Ref Vpc

  Ec2Instance:
      Type: "AWS::EC2::Instance"
      Properties:
        IamInstanceProfile: !Ref AdminInstanceProfile
        ImageId: "ami-05b5277d"
        InstanceType: "t2.micro"
        KeyName:
          Ref: "KeyName"
        NetworkInterfaces:
          - AssociatePublicIpAddress: "true"
            DeviceIndex: "0"
            GroupSet:
              - Ref: "SecurityGroup"
            SubnetId: !Ref Subnet
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash
              git clone https://github.com/omarlari/aws-jenkins-containers.git
              mkdir ~/jenkins-data
              mkdir ~/.kube
              cd aws-jenkins-containers
              docker build -f AWSCLI -t awscli .
              docker build -f KUBECTL -t kubectl .
              chmod u+x ~/aws-jenkins-containers/start-jenkins.sh
              sudo ~/aws-jenkins-containers/start-jenkins.sh

  AdminRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole

  AdminRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: admin
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - '*'
          Resource: '*'
      Roles:
      - !Ref 'AdminRole'

  AdminInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref 'AdminRole'
Outputs:
  PublicIP:
    Value: !GetAtt Ec2Instance.PublicIp
  PublicDNS:
    Value: !GetAtt Ec2Instance.PublicDnsName
